version: "3.8"

services:
  kong-database:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: ${DB_PASSWORD:-kong_secure_password_2024}
      POSTGRES_DB: kong
      # Use md5 auth for better compatibility with older clients
      POSTGRES_INITDB_ARGS: "--auth-host=md5 --auth-local=trust"
    volumes:
      - kong-database-data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro
    command: ["postgres", "-c", "max_connections=200"]
    # Removed port exposure for security - database only accessible within network
    # ports:
    #   - "5432:5432"
    networks:
      - kong-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kong"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.5"
        reservations:
          memory: 256M
          cpus: "0.25"

  kong-migration:
    image: kong:3.7
    command: kong migrations bootstrap
    user: kong
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: ${DB_PASSWORD:-kong_secure_password_2024}
      KONG_PG_DATABASE: kong
      KONG_LOG_LEVEL: debug
    depends_on:
      kong-database:
        condition: service_healthy
    networks:
      - kong-net
    restart: on-failure
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.25"

  kong:
    image: kong:3.7
    user: kong
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: ${DB_PASSWORD:-kong_secure_password_2024}
      KONG_PG_DATABASE: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_LOG_LEVEL: debug
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
      # Security improvements
      KONG_ADMIN_GUI_AUTH: basic-auth
      KONG_ADMIN_GUI_SESSION_SECRET: ${KONG_SESSION_SECRET:-your_session_secret_here}
      KONG_ADMIN_GUI_AUTH_CONF: '{"admin": {"password": "${KONG_ADMIN_PASSWORD:-admin_secure_password_2024}"}}'
      # Additional security settings
      KONG_PROXY_LISTEN: 0.0.0.0:3000, 0.0.0.0:8443 ssl
      KONG_NGINX_WORKER_PROCESSES: auto
      KONG_NGINX_WORKER_CONNECTIONS: 1024
      # Rate limiting
      KONG_REAL_IP_HEADER: X-Forwarded-For
      KONG_TRUSTED_IPS: 172.16.0.0/12,10.0.0.0/8,192.168.0.0/16,::/0
    ports:
      - "3000:3000" # HTTP proxy port
      - "8443:8443" # HTTPS proxy port
      # Admin API - enable for Kong Manager
      - "8001:8001"
      # Admin GUI - enable for Kong Manager
      - "8002:8002"
    depends_on:
      kong-database:
        condition: service_healthy
      kong-migration:
        condition: service_completed_successfully
    networks:
      - kong-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: "1.0"
        reservations:
          memory: 512M
          cpus: "0.5"
    security_opt:
      - no-new-privileges:true

  # Konga has been replaced with Kong Manager (built into Kong)
  # Kong Manager is accessible at http://localhost:8002
  # and is fully compatible with Kong 3.7

volumes:
  kong-database-data:
    driver: local

networks:
  kong-net:
    driver: bridge
